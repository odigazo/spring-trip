<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="myUser">

   <select id="checkEmail" parameterType="String" resultType="User">
      select * from users where userEmail=#{userEmail}
   </select>
   
   <select id="checkIsOut" parameterType="String" resultType="User">
      select * from users where userEmail=#{userEmail} AND isOut='Y'
   </select>
   
   <insert id="insertUser" parameterType="User">
      INSERT INTO users(userEmail,userName,userProfile) VALUES(#{userEmail},#{userName},#{userProfile})
   </insert>
   
   <select id="getUserNum" parameterType="String" resultType="Integer">
      select userNum from users where userEmail=#{userEmail}
   </select>
   
   <select id="getUserCharacter" parameterType="Integer" resultType="Integer">
      select userCharacter from users where userNum=#{userNum}
   </select>
   
   <select id="getUserCharacterByEmail" parameterType="String" resultType="Integer">
      select userCharacter from users where userEmail=#{userEmail}
   </select>
   
   <update id="deleteUser" parameterType="HashMap">
   	  update users set isOut='Y',outDate=#{outDate},userMBTI=NULL,userCharacter=1,
   	  userI=0,userE=0,userS=0,userN=0,userT=0,userF=0,userP=0,userJ=0,
   	  userWin=0,userDefeat=0,userPoint=0
   	  where userEmail=#{userEmail}
   </update>
   
   <update id="reJoin" parameterType="String">
   	  update users set isOut='N',outDate=NULL where userEmail=#{userEmail}
   </update>
   
   <update id="deleteCharacter" parameterType="Integer">
   	  update users set userMBTI=NULL,userCharacter=1,
   	  userI=0,userE=0,userS=0,userN=0,userT=0,userF=0,userP=0,userJ=0
   	  where userCharacter=#{userCharacterNum}
   </update>
   
   <select id="getUserInfoByUserNum" parameterType="String" resultType="User">
      select * from users where userNum=#{battleUserNum} 
   </select>

	<update id="updateUserCharacter" parameterType="User">
   	  update users 
   	  set userCharacter = #{userCharacter}
   	  where userEmail=#{userEmail}
   </update>

 	<update id="updateWinnerPoint" parameterType="battleLog">
   	  update users set userWin = userWin + 1, userPoint = userPoint + #{winPoint}
   	  where userNum =#{winnerNum}
   </update>
   
   <update id="updateLoserPoint" parameterType="battleLog">
   	  update users set userDefeat = userDefeat + 1, userPoint = userPoint + #{losePoint}
   	  where userNum =#{loserNum}
   </update>
   
   <select id="getRanking" parameterType="Integer" resultType="User">
   <![CDATA[
      select *
	  from (SELECT userNum, userName, userMBTI, userWin, userDefeat, userPoint, userAcceptance,
      	 	ROW_NUMBER() OVER (ORDER BY userPoint DESC) as ranking FROM users) a
	  where a.ranking <= #{count} AND userPoint >=1
	]]>
   </select>
   
   <select id="getRankingOne" parameterType="Integer" resultType="User">
   <![CDATA[
      select *
	  from (SELECT userNum, userName, userMBTI, userWin, userDefeat, userPoint, userAcceptance,
      	 	ROW_NUMBER() OVER (ORDER BY userPoint DESC) as ranking FROM users) a
	  where a.ranking = #{count}
	]]>
   </select>
   
   <select id="getExistUserNum" parameterType="String" resultType="Integer">
      select count(userNum) from users where userNum=#{battleUserNum}
   </select>
   
   <select id="checkUserPage" parameterType="String" resultType="User">
      select * from users where userNum=#{userNum}
   </select>
   
   <update id="chageUserAcceptNo" parameterType="String">
   	  update users set userAcceptance = 1
   	  where userNum =#{userNum}
   </update>
   
   <update id="chageUserAcceptYes" parameterType="String">
   	  update users set userAcceptance = 0
   	  where userNum =#{userNum}
   </update>


</mapper>